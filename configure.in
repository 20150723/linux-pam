dnl Process this file with autoconf to produce a configure script.
AC_INIT(conf/pam_conv1/pam_conv.y)

dnl 
dnl Use AC_CONFIG_SUBDIRS to configure all of the module subdirs.  This will
dnl pick up all available module directories at runtime.
dnl
AC_CONFIG_SUBDIRS(modules/pam_*)

dnl The configuration header file
AC_CONFIG_HEADER(pam_aconf.h)

dnl
dnl Release specific
dnl

LIBPAM_VERSION_MAJOR=0
LIBPAM_VERSION_MINOR=72

AC_DEFINE_UNQUOTED(LIBPAM_VERSION_MAJOR, 0)
AC_DEFINE_UNQUOTED(LIBPAM_VERSION_MINOR, 72)
AC_SUBST(LIBPAM_VERSION_MAJOR)
AC_SUBST(LIBPAM_VERSION_MINOR)

dnl
dnl By default, everything under PAM is installed under the root fs.
dnl

AC_PREFIX_DEFAULT()

dnl
dnl These directories should be under /usr instead of / -- we need to change
dnl these manually here.
dnl

if test "$mandir" = '${prefix}/man' -a "$prefix" = ""; then
	mandir='${prefix}/usr/man'
fi
if test "$infodir" = '${prefix}/info' -a "$prefix" = ""; then
	infodir='${prefix}/usr/info'
fi
if test "$includedir" = '${prefix}/include' -a "$prefix" = ""; then
	includedir='${prefix}/usr/include'
fi
if test "$datadir" = '${prefix}/share' -a "$prefix" = ""; then
	datadir='${prefix}/usr/share'
fi
if test "$libexecdir" = '${prefix}/libexec' -a "$prefix" = ""; then
	libexecdir='${prefix}/usr/libexec'
fi

dnl
dnl Rules needed for the following (hardcoded Linux defaults for now)
dnl

CONF_CFLAGS=			; PAM_CACHE_SAVE(CONF_CFLAGS)
MKDIR="mkdir -p"		; PAM_CACHE_SAVE(MKDIR)
DYNTYPE=so			; PAM_CACHE_SAVE(DYNTYPE)
USESONAME=yes			; PAM_CACHE_SAVE(USESONAME)
NEEDSONAME=yes			; PAM_CACHE_SAVE(NEEDSONAME)
INSTALL=/usr/bin/install	; PAM_CACHE_SAVE(INSTALL)


dnl FIXME
SONAMEFLAGS="$(SOSWITCH)" '$(LIBPAMNAME)'
AC_SUBST(SONAMEFLAGS)

dnl This following location is not likely to work for most folk
dnl the rule for locating the directory should be made conditional
dnl upon HAVE_LIBCRYPT being found, and should be moved down this file
dnl The Cracklib module used to have this code in its Makefile.
dnl #ifeq ($(shell if [ -f /usr/lib/cracklib_dict.hwm ]; then echo yes ; fi),yes)
dnl # CRACKLIB_DICTPATH=/usr/lib/cracklib_dict
dnl #else
dnl # CRACKLIB_DICTPATH=/usr/share/dict/cracklib_dict
dnl #endif

CRACKLIB_DICTPATH=/usr/lib/cracklib_dict	; AC_SUBST(CRACKLIB_DICTPATH)

dnl
dnl Check for libdld instead of libdl (HPUX)
dnl
AC_CHECK_LIB(dld, dlopen, LIBDL=-ldld, LIBDL=-ldl)
AC_SUBST(LIBDL)

dnl
dnl options and defaults
dnl

dnl lots of debugging information goes to /tmp/pam-debug.log
AC_ARG_ENABLE(debug,
[  --enable-debug           qspecify you are building with debugging on],
	WITH_DEBUG=yes ; AC_DEFINE(DEBUG) , WITH_DEBUG=no)
AC_SUBST(WITH_DEBUG)

dnl build specially named libraries (for debugging purposes)
AC_ARG_ENABLE(libdebug,
[  --enable-libdebug        specify you are building debugging libraries],
	WITH_LIBDEBUG=yes ; AC_DEFINE(WITH_LIBDEBUG) , WITH_LIBDEBUG=no)
AC_SUBST(WITH_LIBDEBUG)

dnl packaging convenience
AC_ARG_ENABLE(fakeroot,
[  --enable-fakeroot=<path to packaging directory>], FAKEROOT=$withval)
AC_SUBST(FAKEROOT)

AC_ARG_ENABLE(securedir,
[  --enable-securedir=<path to location of PAMs> [default \$libdir/security]],
	SECUREDIR=$withval, SECUREDIR=$libdir/security)
AC_SUBST(SECUREDIR)

AC_ARG_ENABLE(includedir,
[  --enable-includedir=<path to include location> of include <security>],
	INCLUDEDIR=$witharg, INCLUDEDIR=/usr/include)
AC_SUBST(INCLUDEDIR)

AC_ARG_ENABLE(pamlocking,
[  --enable-pamlocking      configure libpam to observe a global authentication lock],
	WITH_PAMLOCKING=yes ; AC_DEFINE(PAM_LOCKING) , WITH_PAMLOCKING=no)
AC_SUBST(WITH_PAMLOCKING)

AC_ARG_ENABLE(uglyhack,
[  --enable-uglyhack        configure libpam to try to honor old pam_strerror syntax],
	AC_DEFINE(UGLY_HACK_FOR_PRIOR_BEHAVIOR_SUPPORT))

AC_ARG_ENABLE(read-both-confs,
[  --enable-read-both-confs  read both /etc/pam.d and /etc/pam.conf files],
	AC_DEFINE(PAM_READ_BOTH_CONFS))
AC_SUBST(PAM_READ_BOTH_CONFS)

AC_ARG_ENABLE(static-libpam, [  --enable-static-libpam   build a libpam.a library],
	STATIC_LIBPAM=yes , STATIC_LIBPAM=no)
AC_SUBST(STATIC_LIBPAM)

AC_ARG_ENABLE(dynamic-libpam,
[  --disable-dynamic-libpam do not build a shared libpam library],
	DYNAMIC_LIBPAM=no, DYNAMIC_LIBPAM=yes)
AC_SUBST(DYNAMIC_LIBPAM)

DYNAMIC=-DPAM_DYNAMIC
AC_ARG_ENABLE(static-modules,
[  --enable-static-modules  do not make the modules dynamically loadable],
	STATIC=-DPAM_STATIC)
AC_SUBST(STATIC)
AC_SUBST(DYNAMIC)

dnl Checks for programs.
dnl AC_PROG_CXX
AC_PROG_YACC
dnl AC_PROG_LEX
AC_PROG_CC
dnl AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

dnl Set FLAGS, linker options etc. depending on C compiler.
dnl gcc is tested and much preferred; others less so, if at all
dnl
dnl If compiling with gcc, linking is also supposed to be done with gcc;
dnl since we use linker-specific arguments, we may not gain anything by
dnl switching LD_L over, but I think we can use LD_D as-is.

GCC_WARNINGS="-ansi -Wall -Wwrite-strings -Wpointer-arith -Wcast-qual -Wcast-align -Wtraditional -Wstrict-prototypes -Wmissing-prototypes -Wnested-externs -Winline -Wshadow -pedantic"

if test "$GCC" = yes; then
	WARNINGS="$GCC_WARNINGS"
	PIC="-fPIC"
	LD=ld
	LD_D="gcc -shared -Xlinker -x"
	LD_L="$LD -x shared"
else
	WARNINGS=""
	PIC=""		### ???
	LD=ld
	LD_D="ld"	### needs attention
	LD_L="$LD"	### needs attention
fi

PAM_CACHE_SAVE(WARNINGS)
PAM_CACHE_SAVE(PIC)
PAM_CACHE_SAVE(LD)
PAM_CACHE_SAVE(LD_L)
PAM_CACHE_SAVE(LD_D)

dnl
dnl If there are systems where 'ld' is not the dynamic linker of choice,
dnl we will need to write an explicit test.
dnl
dnl AC_CHECK_PROGS(LD, [ld])


dnl Checks for libraries.
AC_CHECK_LIB(c, __libc_sched_setscheduler, PAM_NEEDS_LIBC=, PAM_NEEDS_LIBC=-lc)
AC_SUBST(PAM_NEEDS_LIBC)
AC_CHECK_LIB(crack, FascistCheck, HAVE_LIBCRACK=yes ; AC_DEFINE(HAVE_LIBCRACK),
	HAVE_LIBCRACK=no)
AC_SUBST(HAVE_LIBCRACK)

AC_CHECK_LIB(crypt, fcrypt, HAVE_LIBCRYPT=yes ; AC_DEFINE(HAVE_LIBCRYPT),
	HAVE_LIBCRYPT=no)
AC_SUBST(HAVE_LIBCRYPT)
AC_CHECK_LIB(ndbm, dbm_store, HAVE_LIBNDBM=yes ; AC_DEFINE(HAVE_LIBNDBM),
	HAVE_LIBNDBM=no)
AC_SUBST(HAVE_LIBNDBM)
AC_CHECK_LIB(db, dbm_store, HAVE_LIBDB=yes ; AC_DEFINE(HAVE_LIBDB),
	HAVE_LIBDB=no)
AC_SUBST(HAVE_LIBDB)
AC_CHECK_LIB(fl, yylex, yyterminate, HAVE_LIBFL=yes ; AC_DEFINE(HAVE_LIBFL),
	HAVE_LIBFL=no)
AC_SUBST(HAVE_LIBFL)
AC_CHECK_LIB(nsl, yp_maplist, HAVE_LIBNSL=yes ; AC_DEFINE(HAVE_LIBNSL),
	HAVE_LIBNSL=no)
AC_SUBST(HAVE_LIBNSL)
AC_CHECK_LIB(pwdb, pwdb_db_name, HAVE_LIBPWDB=yes ; AC_DEFINE(HAVE_LIBPWDB),
	HAVE_LIBPWDB)
AC_SUBST(HAVE_LIBPWDB)

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h limits.h malloc.h sys/file.h sys/ioctl.h sys/time.h syslog.h termio.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_BIGENDIAN
AC_C_CONST
AC_TYPE_UID_T
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl Checks for library functions.
AC_TYPE_GETGROUPS
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gethostname gettimeofday mkdir select strcspn strdup strerror strspn strstr strtol uname)

dnl A macro for the benefit of AC_OUTPUT and the list of modules/Makefile
define([TOP_N_TAIL], [patsubst($1, [\w+], [$2\&$3])])dnl

dnl Dynamically determine list of module directories
define([MODDIRS],[esyscmd((cd modules; ls -d pam_*))])dnl

dnl Files to be created from when we run configure
AC_OUTPUT(Make.Rules Makefile
  libpam/Makefile libpamc/Makefile modules/Makefile
  TOP_N_TAIL([MODDIRS], [modules/], [/Makefile]))
