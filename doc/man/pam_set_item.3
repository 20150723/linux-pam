.\" ** You probably do not want to edit this file directly **
.\" It was generated using the DocBook XSL Stylesheets (version 1.69.1).
.\" Instead of manually editing it, you probably should edit the DocBook XML
.\" source for it and then use the DocBook XSL Stylesheets to regenerate it.
.TH "PAM_SET_ITEM" "3" "02/12/2006" "Linux\-PAM Manual" "Linux\-PAM Manual"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
pam_set_item \- set and update PAM informations
.SH "SYNOPSIS"
.PP
\fB#include <security/pam_modules.h>\fR
.HP 17
\fBint\ \fBpam_set_item\fR\fR\fB(\fR\fBpam_handle_t\ *\fR\fB\fIpamh\fR\fR\fB, \fR\fBint\ \fR\fB\fIitem_type\fR\fR\fB, \fR\fBconst\ void\ *\fR\fB\fIitem\fR\fR\fB);\fR
.SH "DESCRIPTION"
.PP
The
\fBpam_set_item\fR
function allows applications and PAM service modules to access and to update PAM informations of
\fIitem_type\fR. For this a copy of the object pointed to by the
\fIitem\fR
argument is created. The following
\fIitem_type\fRs are supported:
.TP
PAM_SERVICE
The service name (which identifies that PAM stack that the PAM functions will use to authenticate the program).
.TP
PAM_USER
The username of the entity under whose identity service will be given. That is, following authentication,
\fIPAM_USER\fR
identifies the local entity that gets to use the service. Note, this value can be mapped from something (eg., "anonymous") to something else (eg. "guest119") by any module in the PAM stack. As such an application should consult the value of
\fIPAM_USER\fR
after each call to a PAM function.
.TP
PAM_USER_PROMPT
The string used when prompting for a user's name. The default value for this string is a localized version of "login: ".
.TP
PAM_TTY
The terminal name: prefixed by
\fI/dev/\fR
if it is a device file; for graphical, X\-based, applications the value for this item should be the
\fI$DISPLAY\fR
variable.
.TP
PAM_RUSER
The requesting user name: local name for a locally requesting user or a remote user name for a remote requesting user.
.sp
Generally an application or module will attempt to supply the value that is most strongly authenticated (a local account before a remote one. The level of trust in this value is embodied in the actual authentication stack associated with the application, so it is ultimately at the discretion of the system administrator.
.sp
\fIPAM_RUSER@PAM_RHOST\fR
should always identify the requesting user. In some cases,
\fIPAM_RUSER\fR
may be NULL. In such situations, it is unclear who the requesting entity is.
.TP
PAM_RHOST
The requesting hostname (the hostname of the machine from which the
\fIPAM_RUSER\fR
entity is requesting service). That is
\fIPAM_RUSER@PAM_RHOST\fR
does identify the requesting user. In some applications,
\fIPAM_RHOST\fR
may be NULL. In such situations, it is unclear where the authentication request is originating from.
.TP
PAM_AUTHTOK
The authentication token (often a password). This token should be ignored by all module functions besides
\fBpam_sm_authenticate\fR(3)
and
\fBpam_sm_chauthtok\fR(3). In the former function it is used to pass the most recent authentication token from one stacked module to another. In the latter function the token is used for another purpose. It contains the currently active authentication token.
.TP
PAM_OLDAUTHTOK
The old authentication token. This token should be ignored by all module functions except
\fBpam_sm_chauthtok\fR(3).
.TP
PAM_CONV
The pam_conv structure. See
\fBpam_conv\fR(3).
.TP
PAM_FAIL_DELAY
A function pointer to redirect centrally managed failure delays. See
\fBpam_fail_delay\fR(3).
.PP
For all
\fIitem_type\fRs, other than PAM_CONV and PAM_FAIL_DELAY,
\fIitem\fR
is a pointer to a <NUL> terminated character string. In the case of PAM_CONV,
\fIitem\fR
points to an initialized
\fIpam_conv\fR
structure. In the case of PAM_FAIL_DELAY,
\fIitem\fR
is a function pointer:
\fBvoid (*delay_fn)(int retval, unsigned usec_delay, void *appdata_ptr)\fR
.PP
Both, PAM_AUTHTOK and PAM_OLDAUTHTOK, will be reseted before returning to the application. Which means an application is not able to access the authentication tokens.
.SH "RETURN VALUES"
.TP
PAM_BAD_ITEM
The application attempted to set an undefined or inaccessible item.
.TP
PAM_BUF_ERR
Memory buffer error.
.TP
PAM_SUCCESS
Data was successful updated.
.TP
PAM_SYSTEM_ERR
The
\fIpam_handle_t\fR
passed as first argument was invalid.
.SH "SEE ALSO"
.PP
\fBpam_get_item\fR(3),
\fBpam_strerror\fR(3)
