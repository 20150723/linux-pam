.\" ** You probably do not want to edit this file directly **
.\" It was generated using the DocBook XSL Stylesheets (version 1.69.1).
.\" Instead of manually editing it, you probably should edit the DocBook XML
.\" source for it and then use the DocBook XSL Stylesheets to regenerate it.
.TH "PAM_END" "3" "02/14/2006" "Linux\-PAM Manual" "Linux\-PAM Manual"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
pam_end \- termination of PAM transaction
.SH "SYNOPSIS"
.PP
\fB#include <security/pam_appl.h>\fR
.HP 12
\fBint\ \fBpam_end\fR\fR\fB(\fR\fBpam_handle_t\ *\fR\fB\fIpamh\fR\fR\fB, \fR\fBint\ \fR\fB\fIpam_status\fR\fR\fB);\fR
.SH "DESCRIPTION"
.PP
The
\fBpam_end\fR
function terminates the PAM transaction and is the last function an application should call in the PAM contenxt. Upon return the handle
\fIpamh\fR
is no longer valid and all memory associated with it will be invalid.
.PP
The
\fIpam_status\fR
argument should be set to the value returned to the application by the last PAM library call.
.PP
The value taken by
\fIpam_status\fR
is used as an argument to the module specific callback function,
\fBcleanup()\fR
(See
\fBpam_set_data\fR(3)
and
\fBpam_get_data\fR(3)). In this way the module can be given notification of the pass/fail nature of the tear\-down process, and perform any last minute tasks that are appropriate to the module before it is unlinked. This argument can be logically OR'd with
\fIPAM_DATA_SILENT\fR
to indicate to indicate that the module should not treat the call too seriously. It is generally used to indicate that the current closing of the library is in a
\fBfork\fR(2)ed process, and that the parent will take care of cleaning up things that exist outside of the current process space (files etc.).
.PP
This function
\fIfree\fR's all memory for items associated with the
\fBpam_set_item\fR(3)
and
\fBpam_get_item\fR(3)
functions. Pointers associated with such objects are not valid anymore after
\fBpam_end\fR
was called.
.SH "RETURN VALUES"
.TP
PAM_SUCCESS
Transaction was successful terminated.
.TP
PAM_SYSTEM_ERR
System error, for example a NULL pointer was submitted as PAM handle or the function was called by a module.
.SH "SEE ALSO"
.PP
\fBpam_get_data\fR(3),
\fBpam_set_data\fR(3),
\fBpam_start\fR(3),
\fBpam_strerror\fR(3)
