#
# $Id$
#
# Created by Andrew Morgan <morgan@parc.power.net> 1996/3/11
#
# This Makefile controls a build process of $(TITLE) module for
# Linux-PAM. You should not modify this Makefile (unless you know
# what you are doing!).
#
# $Log$
# Revision 1.1.2.1  2000/07/09 21:18:54  vorlon
#
# Relevant BUGIDs: task 15788
#
# Purpose of commit: increased autoconf support
#
# Commit summary:
# ---------------
# Finished renaming 'Makefile' to 'Makefile.in'.
# Now done for all Makefiles except for modules/pam_permit
#
# Revision 1.1.1.1  2000/06/20 22:11:57  agmorgan
# Imported 0.72 Linux-PAM sources
#
# Revision 1.1.1.1  1998/07/12 05:17:16  morgan
# Linux PAM sources pre-0.66
#
# Revision 1.7  1997/04/05 06:23:08  morgan
# fakeroot
#
# Revision 1.6  1997/02/15 19:05:55  morgan
# fixed email
#
# Revision 1.5  1996/11/10 20:17:55  morgan
# cross platform support
#
# Revision 1.4  1996/09/05 06:31:09  morgan
# ld --> gcc
#
# Revision 1.3  1996/05/26 15:50:43  morgan
# make dynamic and static dirs
#
# Revision 1.2  1996/05/26 04:11:56  morgan
# automated static support
#
#
#

TITLE=pam_stress

#

LIBSRC = $(TITLE).c
LIBOBJ = $(TITLE).o
LIBOBJD = $(addprefix dynamic/,$(LIBOBJ))
LIBOBJS = $(addprefix static/,$(LIBOBJ))

dynamic/%.o : %.c
	$(CC) $(CFLAGS) $(DYNAMIC) $(CPPFLAGS) $(TARGET_ARCH) -c $< -o $@

static/%.o : %.c
	$(CC) $(CFLAGS) $(STATIC) $(CPPFLAGS) $(TARGET_ARCH) -c $< -o $@


ifdef DYNAMIC
LIBSHARED = $(TITLE).so
endif

ifdef STATIC
LIBSTATIC = lib$(TITLE).o
endif

####################### don't edit below #######################

dummy:

	@echo "**** This is not a top-level Makefile "
	exit

all: dirs $(LIBSHARED) $(LIBSTATIC) register

dirs:
ifdef DYNAMIC
	$(MKDIR) ./dynamic
endif
ifdef STATIC
	$(MKDIR) ./static
endif

register:
ifdef STATIC
	( cd .. ; ./register_static $(TITLE) $(TITLE)/$(LIBSTATIC) )
endif

ifdef DYNAMIC
$(LIBOBJD): $(LIBSRC)

$(LIBSHARED):	$(LIBOBJD)
		$(LD_D) -o $@ $(LIBOBJD)
endif

ifdef STATIC
$(LIBOBJS): $(LIBSRC)

$(LIBSTATIC): $(LIBOBJS)
	$(LD) -r -o $@ $(LIBOBJS)
endif

install: all
	$(MKDIR) $(FAKEROOT)$(SECUREDIR)
ifdef DYNAMIC
	$(INSTALL) -m $(SHLIBMODE) $(LIBSHARED) $(FAKEROOT)$(SECUREDIR)
endif

remove:
	rm -f $(FAKEROOT)$(SECUREDIR)/$(TITLE).so

clean:
	rm -f $(LIBOBJD) $(LIBOBJS) core *~

extraclean: clean
	rm -f *.a *.o *.so *.bak

.c.o:	
	$(CC) $(CFLAGS) -c $<

